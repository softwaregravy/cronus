# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Ruby on Rails CI"

# on: [push, pull_request]
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  rspec:
    runs-on: ubuntu-latest

    services:
      postgres:
        # don't get ahead of heroku (usually behind AWS, who we also stay behind)
        # https://devcenter.heroku.com/articles/heroku-postgres-version-support
        image: postgres:15.5-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ""
          POSTGRES_HOST_AUTH_METHOD: trust
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    env:
      RAILS_ENV: test
      DATABASE_URL: postgres://postgres@localhost:5432/test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Set up database for testing
        run: bundle exec rails db:test:prepare

      - name: Run specs
        run: bundle exec rake spec

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      ## Add or replace any other lints here
      - name: Security audit dependencies
        run: bundle exec bundle-audit --update
      - name: Security audit application code
        run: bundle exec brakeman -q -w2
      - name: Lint Ruby files
        run: bundle exec standardrb
      - name: Lint ERB files
        run: bundle exec erblint --lint-all
